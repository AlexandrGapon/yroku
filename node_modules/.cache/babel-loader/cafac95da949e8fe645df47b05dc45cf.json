{"ast":null,"code":"var _jsxFileName = \"C:\\\\IT\\\\react\\\\1\\\\react-lesson-1\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport Preloader from '../common/Preloader/Preloader';\nimport { followTC, unfollowTC, getUsersTC } from '../redux/usersReducer';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageSelected = pageNumber => {\n      this.props.getUsersTC(pageNumber, this.props.pageSize); // this.props.toggleIsFetching(true);\n      // this.props.setCurrentPage(pageNumber);\n      // usersAPI.getUsers(pageNumber, this.props.pageSize)\n      //     .then(data => {\n      //         this.props.toggleIsFetching(false);\n      //         this.props.setUsers(data.items);\n      //     });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsersTC(this.props.currentPage, this.props.pageSize); // this.props.toggleIsFetching(true);\n    // usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\n    //     .then(data => {\n    //         this.props.toggleIsFetching(false);\n    //         this.props.setUsers(data.items);\n    //         this.props.setTotalUsersCount(data.totalCount);\n    //     });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageSelected: this.onPageSelected,\n      follow: this.followTC,\n      unfollow: this.props.unfollow,\n      users: this.props.users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setTotalUsersCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         },\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  followTC,\n  unfollowTC,\n  getUsersTC\n})(UsersContainer);","map":{"version":3,"sources":["C:/IT/react/1/react-lesson-1/src/components/Users/UsersContainer.jsx"],"names":["React","Users","connect","Preloader","followTC","unfollowTC","getUsersTC","UsersContainer","Component","onPageSelected","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","unfollow","users","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,uBAAjD;;AAEA,MAAMC,cAAN,SAA6BP,KAAK,CAACQ,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAczCC,cAdyC,GAcvBC,UAAD,IAAgB;AAE7B,WAAKC,KAAL,CAAWL,UAAX,CAAsBI,UAAtB,EAAkC,KAAKC,KAAL,CAAWC,QAA7C,EAF6B,CAG7B;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAxBwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKF,KAAL,CAAWL,UAAX,CAAsB,KAAKK,KAAL,CAAWG,WAAjC,EAA8C,KAAKH,KAAL,CAAWC,QAAzD,EAFgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAcDG,EAAAA,MAAM,GAAG;AACL,wBAAO,0CACF,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAwC,IADtC,eAEH,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eAAnC;AACI,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QADzB;AAEI,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAF5B;AAGI,MAAA,cAAc,EAAE,KAAKL,cAHzB;AAII,MAAA,MAAM,EAAE,KAAKL,QAJjB;AAKI,MAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWO,QALzB;AAMI,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAWH;;AAtCwC;;AA0C7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADpB;AAEHP,IAAAA,QAAQ,EAAES,KAAK,CAACC,SAAN,CAAgBV,QAFvB;AAGHK,IAAAA,eAAe,EAAEI,KAAK,CAACC,SAAN,CAAgBL,eAH9B;AAIHH,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;AAKHE,IAAAA,UAAU,EAAEK,KAAK,CAACC,SAAN,CAAgBN;AALzB,GAAP;AAOH,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAed,OAAO,CAACkB,eAAD,EAClB;AAAEhB,EAAAA,QAAF;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA;AAAxB,CADkB,CAAP,CAC2BC,cAD3B,CAAf","sourcesContent":["import React from 'react';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { followTC, unfollowTC, getUsersTC } from '../redux/usersReducer';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize);\r\n        // this.props.toggleIsFetching(true);\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.setTotalUsersCount(data.totalCount);\r\n        //     });\r\n    }\r\n\r\n    onPageSelected = (pageNumber) => {\r\n\r\n        this.props.getUsersTC(pageNumber, this.props.pageSize);\r\n        // this.props.toggleIsFetching(true);\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageSelected={this.onPageSelected}\r\n                follow={this.followTC}\r\n                unfollow={this.props.unfollow}\r\n                users={this.props.users}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId));\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId));\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users));\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         },\r\n//     }\r\n// }\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    { followTC, unfollowTC, getUsersTC })(UsersContainer);"]},"metadata":{},"sourceType":"module"}