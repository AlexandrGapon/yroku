{"ast":null,"code":"var _jsxFileName = \"C:\\\\IT\\\\react\\\\1\\\\react-lesson-1\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport Preloader from '../common/Preloader/Preloader';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCountAC, toggleIsFetchingAC } from '../redux/usersReducer';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageSelected = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageSelected: this.onPageSelected,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      users: this.props.users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["C:/IT/react/1/react-lesson-1/src/components/Users/UsersContainer.jsx"],"names":["React","axios","Users","connect","Preloader","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCountAC","toggleIsFetchingAC","UsersContainer","Component","onPageSelected","pageNumber","props","toggleIsFetching","get","pageSize","then","response","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId","followAC","unfollowAC","setUsersAC","setCurrentPageAC"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCountAC, toggleIsFetchingAC } from '../redux/usersReducer';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageSelected = (pageNumber) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageSelected={this.onPageSelected}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                users={this.props.users}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"]},"metadata":{},"sourceType":"module"}