{"ast":null,"code":"var _jsxFileName = \"C:\\\\IT\\\\react\\\\1\\\\react-lesson-1\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport preloader from \"../../assets/images/Spinner.svg\";\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setTotalUsersCountAC, toggleIsFetchingAC } from '../redux/usersReducer';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageSelected = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(true);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching = true ? /*#__PURE__*/React.createElement(\"img\", {\n      src: preloader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 45\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageSelected: this.onPageSelected,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      users: this.props.users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["C:/IT/react/1/react-lesson-1/src/components/Users/UsersContainer.jsx"],"names":["React","axios","Users","connect","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setTotalUsersCountAC","toggleIsFetchingAC","UsersContainer","Component","onPageSelected","pageNumber","props","toggleIsFetching","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","preloader","totalUsersCount","follow","unfollow","users","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport preloader from '../../assets/images/Spinner.svg';\r\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setTotalUsersCountAC, toggleIsFetchingAC } from '../redux/usersReducer';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageSelected = (pageNumber) => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(true);\r\n                this.props.setUsers(response.data.items);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching = true ? <img src={preloader} /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageSelected={this.onPageSelected}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                users={this.props.users}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"]},"metadata":{},"sourceType":"module"}