{"ast":null,"code":"import { usersAPI } from '../../API/usersAPI';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.totalUsersCount\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount: totalCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const getUsersTC = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n      dispatch(setCurrentPage(currentPage));\n    });\n  };\n};\nexport const followTC = () => {\n  return dispatch => {\n    usersAPI.follow(u.id).then(data => {\n      if (data.resultCode == 0) {\n        props.unfollow(u.id);\n      }\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/IT/react/1/react-lesson-1/src/components/redux/usersReducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","u","id","userId","followed","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","totalCount","toggleIsFetching","getUsersTC","dispatch","getUsers","then","data","items","followTC","follow","resultCode","props","unfollow"],"mappings":"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","sourcesContent":["import { usersAPI } from '../../API/usersAPI';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount,\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (totalCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\n\r\nexport const getUsersTC = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n                dispatch(setCurrentPage(currentPage));\r\n            });\r\n    }\r\n}\r\n\r\nexport const followTC = () => {\r\n    return (dispatch) => {\r\n        usersAPI.follow(u.id)\r\n            .then(data => {\r\n                if (data.resultCode == 0) {\r\n                    props.unfollow(u.id);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}