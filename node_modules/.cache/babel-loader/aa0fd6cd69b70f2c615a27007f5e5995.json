{"ast":null,"code":"import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../../API/authAPI\";\nconst SET_USER_DATA = 'SET-USER-DATA';\nlet initialState = {\n  userId: null,\n  emeail: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const setUserData = () => dispatch => {\n  authAPI.getUserData().then(data => {\n    if (data.resultCode === 0) {\n      let {\n        id,\n        email,\n        login\n      } = data.data;\n      dispatch(setAuthUserData(id, email, login, true));\n    }\n  });\n};\nexport const login = () => dispatch => {\n  authAPI.login().then(data => {\n    if (data.resultCode === 0) {\n      dispatch(setUserData());\n    } else {\n      let message = data.messages.length > 0 ? data.messages[0] : 'Some error';\n      dispatch(stopSubmit('login', {\n        _error: message\n      }));\n    }\n  });\n};\nexport const logout = () => dispatch => {\n  authAPI.logout().then(data => {\n    if (data.resultCode === 0) {\n      dispatch(setUserData(null, null, null, false));\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/IT/react/1/react-lesson-1/src/components/redux/authReducer.js"],"names":["stopSubmit","authAPI","SET_USER_DATA","initialState","userId","emeail","login","isAuth","authReducer","state","action","type","payload","setAuthUserData","email","setUserData","dispatch","getUserData","then","data","resultCode","id","message","messages","length","_error","logout"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,MAAM,EAAE,IAFO;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH,WAAGC,MAAM,CAACE;AAFP,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH,CAXD;;AAaA,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAD,EAASU,KAAT,EAAgBR,KAAhB,EAAuBC,MAAvB,MAAmC;AAACI,EAAAA,IAAI,EAAET,aAAP;AAAsBU,EAAAA,OAAO,EAAE;AAACR,IAAAA,MAAD;AAASU,IAAAA,KAAT;AAAgBR,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB;AAA/B,CAAnC,CAAxB;AAEP,OAAO,MAAMQ,WAAW,GAAG,MAAOC,QAAD,IAAc;AACvCf,EAAAA,OAAO,CAACgB,WAAR,GACCC,IADD,CACMC,IAAI,IAAI;AACV,QAAIA,IAAI,CAACC,UAAL,KAAoB,CAAxB,EAA2B;AACvB,UAAI;AAACC,QAAAA,EAAD;AAAKP,QAAAA,KAAL;AAAYR,QAAAA;AAAZ,UAAqBa,IAAI,CAACA,IAA9B;AACAH,MAAAA,QAAQ,CAACH,eAAe,CAACQ,EAAD,EAAKP,KAAL,EAAYR,KAAZ,EAAmB,IAAnB,CAAhB,CAAR;AACH;AACJ,GAND;AAOP,CARM;AAUP,OAAO,MAAMA,KAAK,GAAG,MAAOU,QAAD,IAAc;AACjCf,EAAAA,OAAO,CAACK,KAAR,GACCY,IADD,CACMC,IAAI,IAAI;AACV,QAAIA,IAAI,CAACC,UAAL,KAAoB,CAAxB,EAA2B;AACvBJ,MAAAA,QAAQ,CAACD,WAAW,EAAZ,CAAR;AACH,KAFD,MAEO;AACH,UAAIO,OAAO,GAAGH,IAAI,CAACI,QAAL,CAAcC,MAAd,GAAuB,CAAvB,GAA2BL,IAAI,CAACI,QAAL,CAAc,CAAd,CAA3B,GAA8C,YAA5D;AACAP,MAAAA,QAAQ,CAAChB,UAAU,CAAC,OAAD,EAAU;AAACyB,QAAAA,MAAM,EAAEH;AAAT,OAAV,CAAX,CAAR;AACH;AACJ,GARD;AASP,CAVM;AAYP,OAAO,MAAMI,MAAM,GAAG,MAAOV,QAAD,IAAc;AAClCf,EAAAA,OAAO,CAACyB,MAAR,GACCR,IADD,CACMC,IAAI,IAAI;AACV,QAAIA,IAAI,CAACC,UAAL,KAAoB,CAAxB,EAA2B;AACvBJ,MAAAA,QAAQ,CAACD,WAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAZ,CAAR;AACH;AACJ,GALD;AAMP,CAPM;AAUP,eAAeP,WAAf","sourcesContent":["import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../../API/authAPI\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    emeail: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\r\n\r\nexport const setUserData = () => (dispatch) => {\r\n        authAPI.getUserData()\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, email, login} = data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        });\r\n}\r\n\r\nexport const login = () => (dispatch) => {\r\n        authAPI.login()\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUserData());\r\n            } else {\r\n                let message = data.messages.length > 0 ? data.messages[0] : 'Some error';\r\n                dispatch(stopSubmit('login', {_error: message}))\r\n            }\r\n        });\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n        authAPI.logout()\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false));\r\n            }\r\n        });\r\n}\r\n\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}